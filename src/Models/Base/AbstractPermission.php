<?php

/**
 * This file is part of the Zemit Framework.
 *
 * (c) Zemit Team <contact@zemit.com>
 *
 * For the full copyright and license information, please view the LICENSE.txt
 * file that was distributed with this source code.
 *
 * --------------------------------------------------------------
 *
 * New BSD License
 *
 * Copyright (c) 2017-present, Zemit CMS Team
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Zemit nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL ZEMIT FRAMEWORK TEAM BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

namespace Zemit\Models\Base;

/**
 * AbstractPermission
 * 
 * @package Zemit\Models\Base
 * @autogenerated by Phalcon Developer Tools
 * @date 2020-07-12, 19:34:00
 */
abstract class AbstractPermission extends \Zemit\Models\Base
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(column="id", type="integer", length=10, nullable=false)
     */
    protected $id;

    /**
     *
     * @var string
     * @Column(column="deny", type="string", length=1, nullable=false)
     */
    protected $deny;

    /**
     *
     * @var integer
     * @Column(column="workspace_id", type="integer", length=10, nullable=true)
     */
    protected $workspaceId;

    /**
     *
     * @var integer
     * @Column(column="project_id", type="integer", length=10, nullable=true)
     */
    protected $projectId;

    /**
     *
     * @var integer
     * @Column(column="user_id", type="integer", length=10, nullable=true)
     */
    protected $userId;

    /**
     *
     * @var integer
     * @Column(column="role_id", type="integer", length=10, nullable=true)
     */
    protected $roleId;

    /**
     *
     * @var integer
     * @Column(column="file_id", type="integer", length=10, nullable=true)
     */
    protected $fileId;

    /**
     *
     * @var integer
     * @Column(column="locale_id", type="integer", length=10, nullable=true)
     */
    protected $localeId;

    /**
     *
     * @var integer
     * @Column(column="template_id", type="integer", length=10, nullable=true)
     */
    protected $templateId;

    /**
     *
     * @var integer
     * @Column(column="channel_id", type="integer", length=10, nullable=true)
     */
    protected $channelId;

    /**
     *
     * @var integer
     * @Column(column="channel_field_id", type="integer", length=10, nullable=true)
     */
    protected $channelFieldId;

    /**
     *
     * @var integer
     * @Column(column="endpoint_id", type="integer", length=10, nullable=true)
     */
    protected $endpointId;

    /**
     *
     * @var integer
     * @Column(column="endpoint_field_id", type="integer", length=10, nullable=true)
     */
    protected $endpointFieldId;

    /**
     *
     * @var integer
     * @Column(column="endpoint_version_id", type="integer", length=10, nullable=true)
     */
    protected $endpointVersionId;

    /**
     *
     * @var integer
     * @Column(column="field_id", type="integer", length=10, nullable=true)
     */
    protected $fieldId;

    /**
     *
     * @var integer
     * @Column(column="version_id", type="integer", length=10, nullable=true)
     */
    protected $versionId;

    /**
     *
     * @var string
     * @Column(column="meta", type="string", nullable=true)
     */
    protected $meta;

    /**
     *
     * @var string
     * @Column(column="created_at", type="string", nullable=false)
     */
    protected $createdAt;

    /**
     *
     * @var string
     * @Column(column="updated_at", type="string", nullable=true)
     */
    protected $updatedAt;

    /**
     *
     * @var string
     * @Column(column="deleted_at", type="string", nullable=true)
     */
    protected $deletedAt;

    /**
     *
     * @var string
     * @Column(column="deprecated_at", type="string", nullable=true)
     */
    protected $deprecatedAt;

    /**
     *
     * @var string
     * @Column(column="deleted", type="string", length=1, nullable=false)
     */
    protected $deleted;

    /**
     *
     * @var string
     * @Column(column="deprecated", type="string", length=1, nullable=false)
     */
    protected $deprecated;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field deny
     *
     * @param string $deny
     * @return $this
     */
    public function setDeny($deny)
    {
        $this->deny = $deny;

        return $this;
    }

    /**
     * Method to set the value of field workspace_id
     *
     * @param integer $workspaceId
     * @return $this
     */
    public function setWorkspaceId($workspaceId)
    {
        $this->workspaceId = $workspaceId;

        return $this;
    }

    /**
     * Method to set the value of field project_id
     *
     * @param integer $projectId
     * @return $this
     */
    public function setProjectId($projectId)
    {
        $this->projectId = $projectId;

        return $this;
    }

    /**
     * Method to set the value of field user_id
     *
     * @param integer $userId
     * @return $this
     */
    public function setUserId($userId)
    {
        $this->userId = $userId;

        return $this;
    }

    /**
     * Method to set the value of field role_id
     *
     * @param integer $roleId
     * @return $this
     */
    public function setRoleId($roleId)
    {
        $this->roleId = $roleId;

        return $this;
    }

    /**
     * Method to set the value of field file_id
     *
     * @param integer $fileId
     * @return $this
     */
    public function setFileId($fileId)
    {
        $this->fileId = $fileId;

        return $this;
    }

    /**
     * Method to set the value of field locale_id
     *
     * @param integer $localeId
     * @return $this
     */
    public function setLocaleId($localeId)
    {
        $this->localeId = $localeId;

        return $this;
    }

    /**
     * Method to set the value of field template_id
     *
     * @param integer $templateId
     * @return $this
     */
    public function setTemplateId($templateId)
    {
        $this->templateId = $templateId;

        return $this;
    }

    /**
     * Method to set the value of field channel_id
     *
     * @param integer $channelId
     * @return $this
     */
    public function setChannelId($channelId)
    {
        $this->channelId = $channelId;

        return $this;
    }

    /**
     * Method to set the value of field channel_field_id
     *
     * @param integer $channelFieldId
     * @return $this
     */
    public function setChannelFieldId($channelFieldId)
    {
        $this->channelFieldId = $channelFieldId;

        return $this;
    }

    /**
     * Method to set the value of field endpoint_id
     *
     * @param integer $endpointId
     * @return $this
     */
    public function setEndpointId($endpointId)
    {
        $this->endpointId = $endpointId;

        return $this;
    }

    /**
     * Method to set the value of field endpoint_field_id
     *
     * @param integer $endpointFieldId
     * @return $this
     */
    public function setEndpointFieldId($endpointFieldId)
    {
        $this->endpointFieldId = $endpointFieldId;

        return $this;
    }

    /**
     * Method to set the value of field endpoint_version_id
     *
     * @param integer $endpointVersionId
     * @return $this
     */
    public function setEndpointVersionId($endpointVersionId)
    {
        $this->endpointVersionId = $endpointVersionId;

        return $this;
    }

    /**
     * Method to set the value of field field_id
     *
     * @param integer $fieldId
     * @return $this
     */
    public function setFieldId($fieldId)
    {
        $this->fieldId = $fieldId;

        return $this;
    }

    /**
     * Method to set the value of field version_id
     *
     * @param integer $versionId
     * @return $this
     */
    public function setVersionId($versionId)
    {
        $this->versionId = $versionId;

        return $this;
    }

    /**
     * Method to set the value of field meta
     *
     * @param string $meta
     * @return $this
     */
    public function setMeta($meta)
    {
        $this->meta = $meta;

        return $this;
    }

    /**
     * Method to set the value of field created_at
     *
     * @param string $createdAt
     * @return $this
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Method to set the value of field updated_at
     *
     * @param string $updatedAt
     * @return $this
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Method to set the value of field deleted_at
     *
     * @param string $deletedAt
     * @return $this
     */
    public function setDeletedAt($deletedAt)
    {
        $this->deletedAt = $deletedAt;

        return $this;
    }

    /**
     * Method to set the value of field deprecated_at
     *
     * @param string $deprecatedAt
     * @return $this
     */
    public function setDeprecatedAt($deprecatedAt)
    {
        $this->deprecatedAt = $deprecatedAt;

        return $this;
    }

    /**
     * Method to set the value of field deleted
     *
     * @param string $deleted
     * @return $this
     */
    public function setDeleted($deleted)
    {
        $this->deleted = $deleted;

        return $this;
    }

    /**
     * Method to set the value of field deprecated
     *
     * @param string $deprecated
     * @return $this
     */
    public function setDeprecated($deprecated)
    {
        $this->deprecated = $deprecated;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the value of field deny
     *
     * @return string
     */
    public function getDeny()
    {
        return $this->deny;
    }

    /**
     * Returns the value of field workspaceId
     *
     * @return integer
     */
    public function getWorkspaceId()
    {
        return $this->workspaceId;
    }

    /**
     * Returns the value of field projectId
     *
     * @return integer
     */
    public function getProjectId()
    {
        return $this->projectId;
    }

    /**
     * Returns the value of field userId
     *
     * @return integer
     */
    public function getUserId()
    {
        return $this->userId;
    }

    /**
     * Returns the value of field roleId
     *
     * @return integer
     */
    public function getRoleId()
    {
        return $this->roleId;
    }

    /**
     * Returns the value of field fileId
     *
     * @return integer
     */
    public function getFileId()
    {
        return $this->fileId;
    }

    /**
     * Returns the value of field localeId
     *
     * @return integer
     */
    public function getLocaleId()
    {
        return $this->localeId;
    }

    /**
     * Returns the value of field templateId
     *
     * @return integer
     */
    public function getTemplateId()
    {
        return $this->templateId;
    }

    /**
     * Returns the value of field channelId
     *
     * @return integer
     */
    public function getChannelId()
    {
        return $this->channelId;
    }

    /**
     * Returns the value of field channelFieldId
     *
     * @return integer
     */
    public function getChannelFieldId()
    {
        return $this->channelFieldId;
    }

    /**
     * Returns the value of field endpointId
     *
     * @return integer
     */
    public function getEndpointId()
    {
        return $this->endpointId;
    }

    /**
     * Returns the value of field endpointFieldId
     *
     * @return integer
     */
    public function getEndpointFieldId()
    {
        return $this->endpointFieldId;
    }

    /**
     * Returns the value of field endpointVersionId
     *
     * @return integer
     */
    public function getEndpointVersionId()
    {
        return $this->endpointVersionId;
    }

    /**
     * Returns the value of field fieldId
     *
     * @return integer
     */
    public function getFieldId()
    {
        return $this->fieldId;
    }

    /**
     * Returns the value of field versionId
     *
     * @return integer
     */
    public function getVersionId()
    {
        return $this->versionId;
    }

    /**
     * Returns the value of field meta
     *
     * @return string
     */
    public function getMeta()
    {
        return $this->meta;
    }

    /**
     * Returns the value of field createdAt
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Returns the value of field updatedAt
     *
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }

    /**
     * Returns the value of field deletedAt
     *
     * @return string
     */
    public function getDeletedAt()
    {
        return $this->deletedAt;
    }

    /**
     * Returns the value of field deprecatedAt
     *
     * @return string
     */
    public function getDeprecatedAt()
    {
        return $this->deprecatedAt;
    }

    /**
     * Returns the value of field deleted
     *
     * @return string
     */
    public function getDeleted()
    {
        return $this->deleted;
    }

    /**
     * Returns the value of field deprecated
     *
     * @return string
     */
    public function getDeprecated()
    {
        return $this->deprecated;
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
		parent::initialize();
        // $this->setSchema("zemit");
        $this->setSource("permission");
        $this->belongsTo('channelFieldId', 'Zemit\Models\Base\ChannelField', 'id', ['alias' => 'ChannelField']);
        $this->belongsTo('channelId', 'Zemit\Models\Base\Channel', 'id', ['alias' => 'Channel']);
        $this->belongsTo('endpointFieldId', 'Zemit\Models\Base\EndpointField', 'id', ['alias' => 'EndpointField']);
        $this->belongsTo('endpointId', 'Zemit\Models\Base\Endpoint', 'id', ['alias' => 'Endpoint']);
        $this->belongsTo('endpointVersionId', 'Zemit\Models\Base\EndpointVersion', 'id', ['alias' => 'EndpointVersion']);
        $this->belongsTo('fieldId', 'Zemit\Models\Base\Field', 'id', ['alias' => 'Field']);
        $this->belongsTo('fileId', 'Zemit\Models\Base\File', 'id', ['alias' => 'File']);
        $this->belongsTo('localeId', 'Zemit\Models\Base\Locale', 'id', ['alias' => 'Locale']);
        $this->belongsTo('projectId', 'Zemit\Models\Base\Project', 'id', ['alias' => 'Project']);
        $this->belongsTo('roleId', 'Zemit\Models\Base\Role', 'id', ['alias' => 'Role']);
        $this->belongsTo('templateId', 'Zemit\Models\Base\Template', 'id', ['alias' => 'Template']);
        $this->belongsTo('userId', 'Zemit\Models\Base\User', 'id', ['alias' => 'User']);
        $this->belongsTo('versionId', 'Zemit\Models\Base\Version', 'id', ['alias' => 'Version']);
        $this->belongsTo('workspaceId', 'Zemit\Models\Base\Workspace', 'id', ['alias' => 'Workspace']);
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return AbstractPermission[]|AbstractPermission|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null): \Phalcon\Mvc\Model\ResultsetInterface
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return AbstractPermission|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return [
            'id' => 'id',
            'deny' => 'deny',
            'workspace_id' => 'workspaceId',
            'project_id' => 'projectId',
            'user_id' => 'userId',
            'role_id' => 'roleId',
            'file_id' => 'fileId',
            'locale_id' => 'localeId',
            'template_id' => 'templateId',
            'channel_id' => 'channelId',
            'channel_field_id' => 'channelFieldId',
            'endpoint_id' => 'endpointId',
            'endpoint_field_id' => 'endpointFieldId',
            'endpoint_version_id' => 'endpointVersionId',
            'field_id' => 'fieldId',
            'version_id' => 'versionId',
            'meta' => 'meta',
            'created_at' => 'createdAt',
            'updated_at' => 'updatedAt',
            'deleted_at' => 'deletedAt',
            'deprecated_at' => 'deprecatedAt',
            'deleted' => 'deleted',
            'deprecated' => 'deprecated'
        ];
    }

}
