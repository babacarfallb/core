<?php

/**
 * This file is part of the Zemit Framework.
 *
 * (c) Zemit Team <contact@zemit.com>
 *
 * For the full copyright and license information, please view the LICENSE.txt
 * file that was distributed with this source code.
 *
 * --------------------------------------------------------------
 *
 * New BSD License
 *
 * Copyright (c) 2017-present, Zemit CMS Team
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Zemit nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL ZEMIT FRAMEWORK TEAM BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

namespace Zemit\Models\Base;

/**
 * AbstractValue
 * 
 * @package Zemit\Models\Base
 * @autogenerated by Phalcon Developer Tools
 * @date 2020-07-12, 19:34:00
 */
abstract class AbstractValue extends \Zemit\Models\Base
{

    /**
     *
     * @var integer
     * @Primary
     * @Identity
     * @Column(column="id", type="integer", length=10, nullable=false)
     */
    protected $id;

    /**
     *
     * @var integer
     * @Column(column="workspace_id", type="integer", length=10, nullable=false)
     */
    protected $workspaceId;

    /**
     *
     * @var integer
     * @Column(column="project_id", type="integer", length=10, nullable=false)
     */
    protected $projectId;

    /**
     *
     * @var integer
     * @Column(column="locale_id", type="integer", length=10, nullable=true)
     */
    protected $localeId;

    /**
     *
     * @var integer
     * @Column(column="channel_id", type="integer", length=10, nullable=false)
     */
    protected $channelId;

    /**
     *
     * @var integer
     * @Column(column="field_id", type="integer", length=10, nullable=false)
     */
    protected $fieldId;

    /**
     *
     * @var integer
     * @Column(column="value_int", type="integer", length=20, nullable=true)
     */
    protected $valueInt;

    /**
     *
     * @var string
     * @Column(column="value_string", type="string", length=191, nullable=true)
     */
    protected $valueString;

    /**
     *
     * @var string
     * @Column(column="value_text", type="string", nullable=true)
     */
    protected $valueText;

    /**
     *
     * @var string
     * @Column(column="value_json", type="string", nullable=true)
     */
    protected $valueJson;

    /**
     *
     * @var string
     * @Column(column="value_date", type="string", nullable=true)
     */
    protected $valueDate;

    /**
     *
     * @var string
     * @Column(column="value_datetime", type="string", nullable=true)
     */
    protected $valueDatetime;

    /**
     *
     * @var string
     * @Column(column="value_datetime_end", type="string", nullable=true)
     */
    protected $valueDatetimeEnd;

    /**
     *
     * @var string
     * @Column(column="value_timestamp", type="string", nullable=true)
     */
    protected $valueTimestamp;

    /**
     *
     * @var string
     * @Column(column="value_binary", type="string", length=1, nullable=true)
     */
    protected $valueBinary;

    /**
     *
     * @var string
     * @Column(column="value_blob", type="string", nullable=true)
     */
    protected $valueBlob;

    /**
     *
     * @var string
     * @Column(column="meta", type="string", nullable=true)
     */
    protected $meta;

    /**
     *
     * @var string
     * @Column(column="created_at", type="string", nullable=false)
     */
    protected $createdAt;

    /**
     *
     * @var string
     * @Column(column="updated_at", type="string", nullable=true)
     */
    protected $updatedAt;

    /**
     *
     * @var string
     * @Column(column="deleted_at", type="string", nullable=true)
     */
    protected $deletedAt;

    /**
     *
     * @var string
     * @Column(column="generic", type="string", length=1, nullable=true)
     */
    protected $generic;

    /**
     *
     * @var string
     * @Column(column="deleted", type="string", length=1, nullable=false)
     */
    protected $deleted;

    /**
     * Method to set the value of field id
     *
     * @param integer $id
     * @return $this
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Method to set the value of field workspace_id
     *
     * @param integer $workspaceId
     * @return $this
     */
    public function setWorkspaceId($workspaceId)
    {
        $this->workspaceId = $workspaceId;

        return $this;
    }

    /**
     * Method to set the value of field project_id
     *
     * @param integer $projectId
     * @return $this
     */
    public function setProjectId($projectId)
    {
        $this->projectId = $projectId;

        return $this;
    }

    /**
     * Method to set the value of field locale_id
     *
     * @param integer $localeId
     * @return $this
     */
    public function setLocaleId($localeId)
    {
        $this->localeId = $localeId;

        return $this;
    }

    /**
     * Method to set the value of field channel_id
     *
     * @param integer $channelId
     * @return $this
     */
    public function setChannelId($channelId)
    {
        $this->channelId = $channelId;

        return $this;
    }

    /**
     * Method to set the value of field field_id
     *
     * @param integer $fieldId
     * @return $this
     */
    public function setFieldId($fieldId)
    {
        $this->fieldId = $fieldId;

        return $this;
    }

    /**
     * Method to set the value of field value_int
     *
     * @param integer $valueInt
     * @return $this
     */
    public function setValueInt($valueInt)
    {
        $this->valueInt = $valueInt;

        return $this;
    }

    /**
     * Method to set the value of field value_string
     *
     * @param string $valueString
     * @return $this
     */
    public function setValueString($valueString)
    {
        $this->valueString = $valueString;

        return $this;
    }

    /**
     * Method to set the value of field value_text
     *
     * @param string $valueText
     * @return $this
     */
    public function setValueText($valueText)
    {
        $this->valueText = $valueText;

        return $this;
    }

    /**
     * Method to set the value of field value_json
     *
     * @param string $valueJson
     * @return $this
     */
    public function setValueJson($valueJson)
    {
        $this->valueJson = $valueJson;

        return $this;
    }

    /**
     * Method to set the value of field value_date
     *
     * @param string $valueDate
     * @return $this
     */
    public function setValueDate($valueDate)
    {
        $this->valueDate = $valueDate;

        return $this;
    }

    /**
     * Method to set the value of field value_datetime
     *
     * @param string $valueDatetime
     * @return $this
     */
    public function setValueDatetime($valueDatetime)
    {
        $this->valueDatetime = $valueDatetime;

        return $this;
    }

    /**
     * Method to set the value of field value_datetime_end
     *
     * @param string $valueDatetimeEnd
     * @return $this
     */
    public function setValueDatetimeEnd($valueDatetimeEnd)
    {
        $this->valueDatetimeEnd = $valueDatetimeEnd;

        return $this;
    }

    /**
     * Method to set the value of field value_timestamp
     *
     * @param string $valueTimestamp
     * @return $this
     */
    public function setValueTimestamp($valueTimestamp)
    {
        $this->valueTimestamp = $valueTimestamp;

        return $this;
    }

    /**
     * Method to set the value of field value_binary
     *
     * @param string $valueBinary
     * @return $this
     */
    public function setValueBinary($valueBinary)
    {
        $this->valueBinary = $valueBinary;

        return $this;
    }

    /**
     * Method to set the value of field value_blob
     *
     * @param string $valueBlob
     * @return $this
     */
    public function setValueBlob($valueBlob)
    {
        $this->valueBlob = $valueBlob;

        return $this;
    }

    /**
     * Method to set the value of field meta
     *
     * @param string $meta
     * @return $this
     */
    public function setMeta($meta)
    {
        $this->meta = $meta;

        return $this;
    }

    /**
     * Method to set the value of field created_at
     *
     * @param string $createdAt
     * @return $this
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Method to set the value of field updated_at
     *
     * @param string $updatedAt
     * @return $this
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Method to set the value of field deleted_at
     *
     * @param string $deletedAt
     * @return $this
     */
    public function setDeletedAt($deletedAt)
    {
        $this->deletedAt = $deletedAt;

        return $this;
    }

    /**
     * Method to set the value of field generic
     *
     * @param string $generic
     * @return $this
     */
    public function setGeneric($generic)
    {
        $this->generic = $generic;

        return $this;
    }

    /**
     * Method to set the value of field deleted
     *
     * @param string $deleted
     * @return $this
     */
    public function setDeleted($deleted)
    {
        $this->deleted = $deleted;

        return $this;
    }

    /**
     * Returns the value of field id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Returns the value of field workspaceId
     *
     * @return integer
     */
    public function getWorkspaceId()
    {
        return $this->workspaceId;
    }

    /**
     * Returns the value of field projectId
     *
     * @return integer
     */
    public function getProjectId()
    {
        return $this->projectId;
    }

    /**
     * Returns the value of field localeId
     *
     * @return integer
     */
    public function getLocaleId()
    {
        return $this->localeId;
    }

    /**
     * Returns the value of field channelId
     *
     * @return integer
     */
    public function getChannelId()
    {
        return $this->channelId;
    }

    /**
     * Returns the value of field fieldId
     *
     * @return integer
     */
    public function getFieldId()
    {
        return $this->fieldId;
    }

    /**
     * Returns the value of field valueInt
     *
     * @return integer
     */
    public function getValueInt()
    {
        return $this->valueInt;
    }

    /**
     * Returns the value of field valueString
     *
     * @return string
     */
    public function getValueString()
    {
        return $this->valueString;
    }

    /**
     * Returns the value of field valueText
     *
     * @return string
     */
    public function getValueText()
    {
        return $this->valueText;
    }

    /**
     * Returns the value of field valueJson
     *
     * @return string
     */
    public function getValueJson()
    {
        return $this->valueJson;
    }

    /**
     * Returns the value of field valueDate
     *
     * @return string
     */
    public function getValueDate()
    {
        return $this->valueDate;
    }

    /**
     * Returns the value of field valueDatetime
     *
     * @return string
     */
    public function getValueDatetime()
    {
        return $this->valueDatetime;
    }

    /**
     * Returns the value of field valueDatetimeEnd
     *
     * @return string
     */
    public function getValueDatetimeEnd()
    {
        return $this->valueDatetimeEnd;
    }

    /**
     * Returns the value of field valueTimestamp
     *
     * @return string
     */
    public function getValueTimestamp()
    {
        return $this->valueTimestamp;
    }

    /**
     * Returns the value of field valueBinary
     *
     * @return string
     */
    public function getValueBinary()
    {
        return $this->valueBinary;
    }

    /**
     * Returns the value of field valueBlob
     *
     * @return string
     */
    public function getValueBlob()
    {
        return $this->valueBlob;
    }

    /**
     * Returns the value of field meta
     *
     * @return string
     */
    public function getMeta()
    {
        return $this->meta;
    }

    /**
     * Returns the value of field createdAt
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Returns the value of field updatedAt
     *
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }

    /**
     * Returns the value of field deletedAt
     *
     * @return string
     */
    public function getDeletedAt()
    {
        return $this->deletedAt;
    }

    /**
     * Returns the value of field generic
     *
     * @return string
     */
    public function getGeneric()
    {
        return $this->generic;
    }

    /**
     * Returns the value of field deleted
     *
     * @return string
     */
    public function getDeleted()
    {
        return $this->deleted;
    }

    /**
     * Initialize method for model.
     */
    public function initialize()
    {
		parent::initialize();
        // $this->setSchema("zemit");
        $this->setSource("value");
        $this->belongsTo('channelId', 'Zemit\Models\Base\Channel', 'id', ['alias' => 'Channel']);
        $this->belongsTo('fieldId', 'Zemit\Models\Base\Field', 'id', ['alias' => 'Field']);
        $this->belongsTo('localeId', 'Zemit\Models\Base\Locale', 'id', ['alias' => 'Locale']);
        $this->belongsTo('projectId', 'Zemit\Models\Base\Project', 'id', ['alias' => 'Project']);
        $this->belongsTo('workspaceId', 'Zemit\Models\Base\Workspace', 'id', ['alias' => 'Workspace']);
    }

    /**
     * Allows to query a set of records that match the specified conditions
     *
     * @param mixed $parameters
     * @return AbstractValue[]|AbstractValue|\Phalcon\Mvc\Model\ResultSetInterface
     */
    public static function find($parameters = null): \Phalcon\Mvc\Model\ResultsetInterface
    {
        return parent::find($parameters);
    }

    /**
     * Allows to query the first record that match the specified conditions
     *
     * @param mixed $parameters
     * @return AbstractValue|\Phalcon\Mvc\Model\ResultInterface
     */
    public static function findFirst($parameters = null)
    {
        return parent::findFirst($parameters);
    }

    /**
     * Independent Column Mapping.
     * Keys are the real names in the table and the values their names in the application
     *
     * @return array
     */
    public function columnMap()
    {
        return [
            'id' => 'id',
            'workspace_id' => 'workspaceId',
            'project_id' => 'projectId',
            'locale_id' => 'localeId',
            'channel_id' => 'channelId',
            'field_id' => 'fieldId',
            'value_int' => 'valueInt',
            'value_string' => 'valueString',
            'value_text' => 'valueText',
            'value_json' => 'valueJson',
            'value_date' => 'valueDate',
            'value_datetime' => 'valueDatetime',
            'value_datetime_end' => 'valueDatetimeEnd',
            'value_timestamp' => 'valueTimestamp',
            'value_binary' => 'valueBinary',
            'value_blob' => 'valueBlob',
            'meta' => 'meta',
            'created_at' => 'createdAt',
            'updated_at' => 'updatedAt',
            'deleted_at' => 'deletedAt',
            'generic' => 'generic',
            'deleted' => 'deleted'
        ];
    }

}
